# Generated by Django 5.0.3 on 2024-03-20 13:12

from django.db import migrations, models
from pgvector.django import VectorExtension


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        VectorExtension(),
        migrations.CreateModel(
            name="ClassroomMembers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("classroom_id", models.IntegerField()),
                ("is_teaching", models.BooleanField()),
                ("username", models.TextField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "classroom_members",
                "db_table": "classroom_members",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ClassroomProjects",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("classroom_id", models.IntegerField()),
                ("project_id", models.IntegerField()),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("is_starter", models.BooleanField()),
                ("unit", models.IntegerField()),
            ],
            options={
                "verbose_name_plural": "classroom_projects",
                "db_table": "classroom_projects",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Classrooms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                ("image", models.TextField(blank=True, null=True)),
                ("host", models.TextField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("current_unit", models.IntegerField()),
                ("introduction", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "classrooms",
                "db_table": "classrooms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ClassroomUnits",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("classroom_id", models.IntegerField()),
                ("number", models.IntegerField()),
                ("title", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                ("image", models.TextField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "classroom_units",
                "db_table": "classroom_units",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Comments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("projectname", models.TextField(blank=True, null=True)),
                ("projectowner", models.TextField(blank=True, null=True)),
                ("author", models.TextField(blank=True, null=True)),
                ("contents", models.TextField(blank=True, null=True)),
                ("date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "comments",
                "db_table": "comments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LapisMigrations",
            fields=[
                (
                    "name",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
            ],
            options={
                "verbose_name_plural": "lapis_migrations",
                "db_table": "lapis_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Likes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("liker", models.TextField(blank=True, null=True)),
                ("projectname", models.TextField(blank=True, null=True)),
                ("projectowner", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "likes",
                "db_table": "likes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Pages",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("slug", models.TextField(unique=True)),
                ("title", models.TextField()),
                ("content", models.TextField(blank=True, null=True)),
                (
                    "last_edit_by",
                    models.TextField(blank=True, db_column="last_edit_by", null=True),
                ),
                ("last_edit_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "pages",
                "db_table": "pages",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Projects",
            fields=[
                ("projectname", models.TextField()),
                ("ispublic", models.BooleanField(blank=True, null=True)),
                ("contents", models.TextField(blank=True, null=True)),
                ("thumbnail", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("username", models.TextField(blank=True, null=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("shared", models.DateTimeField(blank=True, null=True)),
                ("views", models.IntegerField(blank=True, null=True)),
                ("imageisfeatured", models.BooleanField(blank=True, null=True)),
                ("categories", models.TextField(blank=True, null=True)),
                ("created", models.DateTimeField(blank=True, null=True)),
                ("origcreator", models.TextField(blank=True, null=True)),
                ("origname", models.TextField(blank=True, null=True)),
                ("remixhistory", models.TextField(blank=True, null=True)),
                ("tags", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "projects",
                "db_table": "projects",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                ("username", models.TextField(unique=True)),
                ("email", models.TextField(blank=True, null=True, unique=True)),
                ("password", models.TextField(blank=True, null=True)),
                ("joined", models.DateTimeField(blank=True, null=True)),
                ("about", models.TextField(blank=True, null=True)),
                ("location", models.TextField(blank=True, null=True)),
                ("isadmin", models.BooleanField(blank=True, null=True)),
                ("reset_code", models.TextField(blank=True, null=True)),
                ("notify_comment", models.BooleanField(blank=True, null=True)),
                ("notify_like", models.BooleanField(blank=True, null=True)),
                ("confirmed", models.BooleanField(blank=True, null=True)),
                ("ismoderator", models.BooleanField(blank=True, null=True)),
                ("confirm_code", models.TextField(blank=True, null=True)),
                ("is_teacher", models.BooleanField()),
                ("is_puppet", models.BooleanField()),
                ("has_teacher", models.TextField(blank=True, null=True)),
                ("last_active", models.DateTimeField(blank=True, null=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name_plural": "users",
                "db_table": "users",
                "managed": False,
            },
        ),
    ]
