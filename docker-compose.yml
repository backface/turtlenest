services:

  memcached:
    image: memcached
    restart: unless-stopped
    
  db:
    image: pgvector/pgvector:pg16
    env_file:
      - '.env'
    volumes:
      - ${APP_DATA_DIR?./app-data}/postgres-data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 30s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  legacy-db:
    image: postgres:16    
    env_file:
      - '.env'
    volumes:
      - ${APP_DATA_DIR?./app-data}/postgres-legacy-data:/var/lib/postgresql/data/
      - ${APP_DATA_DIR?./app-data}/postgres-init:/docker-entrypoint-initdb.d/
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 30s
      retries: 10
      start_period: 20s      
    restart: unless-stopped

  django:
    image: backface/turtlenest:latest
    build:
      context:  ./
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1      
    env_file:
      - '.env'      
    depends_on:
      - db
    networks:
      - public_proxy
      - default      
    healthcheck:
      test: curl -o /dev/null localhost/alive|| true 
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s    
    volumes:
      - ${APP_DATA_DIR?./app-data/}/media:/app/app-data/media
      - ./static:/app/static

    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      caddy: ${DOMAIN}
      caddy.log: ""
      caddy.@media.path: "/media* /static* /turtlestitch* /snap*"
      caddy.0_redir: "/static/run* /turtlestitch"
      caddy.1_handle: "@media"
      caddy.1_handle.0_root: "/media* /app/"
      caddy.1_handle.1_root: "/run* /app/guis/turtlestitch/"
      caddy.1_handle.2_root: "/static* /app/"
      caddy.1_handle.3_root: "/snap* /app/guis/"
      caddy.1_handle.4_root: "/turtlestitch* /app/guis/"
      caddy.1_handle.5_file_server: ""
      caddy.2_handle: "/hooks*"
      caddy_2_handle.0_reverse_proxy: "host.docker.internal:9000"
      caddy.3_handle.0_reverse_proxy: "{{upstreams 8000}}"


networks:
  public_proxy:
    name: public_proxy  
    external: true
